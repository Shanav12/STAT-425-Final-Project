Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(names(x))
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
pairs(data_clean[sapply(data_clean, is.numeric)])
cor_matrix <- cor(data_clean[sapply(data_clean, is.numeric)], use = "complete.obs")
print(cor_matrix)
ggplot(data_clean, aes(x = age, y = bmi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
categorical_columns <- c('age', 'sex', 'bmi')
data_clean[categorical_columns] <- lapply(data_clean[categorical_columns], factor)
str(data_clean)
factor_columns <- names(data_clean)[sapply(data_clean, is.factor)]
print(factor_columns)
if (length(factor_columns) == 0) {
cat("No factor columns available.\n")
} else {
sapply(factor_columns, function(col) print(table(data_clean[[col]])))
}
lapply(names(data_clean)[sapply(data_clean, is.factor)], function(col_name) {
plot <- ggplot(data_clean, aes_string(x = col_name, fill = col_name)) +
geom_bar() +
xlab(col_name) +
ggtitle(paste("Distribution of", col_name)) +
theme_minimal()
print(plot)
})
Q1 <- quantile(data$age, 0.25)
Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(names(x))
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(names(x))
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
pairs(data_clean[sapply(data_clean, is.numeric)])
cor_matrix <- cor(data_clean[sapply(data_clean, is.numeric)], use = "complete.obs")
print(cor_matrix)
ggplot(data_clean, aes(x = age, y = bmi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
categorical_columns <- c('age', 'sex', 'bmi')
data_clean[categorical_columns] <- lapply(data_clean[categorical_columns], factor)
str(data_clean)
factor_columns <- names(data_clean)[sapply(data_clean, is.factor)]
print(factor_columns)
if (length(factor_columns) == 0) {
cat("No factor columns available.\n")
} else {
sapply(factor_columns, function(col) print(table(data_clean[[col]])))
}
lapply(names(data_clean)[sapply(data_clean, is.factor)], function(col_name) {
plot <- ggplot(data_clean, aes_string(x = col_name, fill = col_name)) +
geom_bar() +
xlab(col_name) +
ggtitle(paste("Distribution of", col_name)) +
theme_minimal()
print(plot)
})
Q1 <- quantile(data$age, 0.25)
Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(names(data_clean))
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(names(data_clean))
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
pairs(data_clean[sapply(data_clean, is.numeric)])
cor_matrix <- cor(data_clean[sapply(data_clean, is.numeric)], use = "complete.obs")
print(cor_matrix)
ggplot(data_clean, aes(x = age, y = bmi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
categorical_columns <- c('age', 'sex', 'bmi')
data_clean[categorical_columns] <- lapply(data_clean[categorical_columns], factor)
str(data_clean)
factor_columns <- names(data_clean)[sapply(data_clean, is.factor)]
print(factor_columns)
if (length(factor_columns) == 0) {
cat("No factor columns available.\n")
} else {
sapply(factor_columns, function(col) print(table(data_clean[[col]])))
}
lapply(names(data_clean)[sapply(data_clean, is.factor)], function(col_name) {
plot <- ggplot(data_clean, aes_string(x = col_name, fill = col_name)) +
geom_bar() +
xlab(col_name) +
ggtitle(paste("Distribution of", col_name)) +
theme_minimal()
print(plot)
})
Q1 <- quantile(data$age, 0.25)
Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
# Boxplots
boxplots <- lapply(data_clean[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(names(x))
})
print(boxplots)
pairs(data_clean[sapply(data_clean, is.numeric)])
cor_matrix <- cor(data_clean[sapply(data_clean, is.numeric)], use = "complete.obs")
print(cor_matrix)
ggplot(data_clean, aes(x = age, y = bmi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
categorical_columns <- c('age', 'sex', 'bmi')
data_clean[categorical_columns] <- lapply(data_clean[categorical_columns], factor)
str(data_clean)
factor_columns <- names(data_clean)[sapply(data_clean, is.factor)]
print(factor_columns)
if (length(factor_columns) == 0) {
cat("No factor columns available.\n")
} else {
sapply(factor_columns, function(col) print(table(data_clean[[col]])))
}
lapply(names(data_clean)[sapply(data_clean, is.factor)], function(col_name) {
plot <- ggplot(data_clean, aes_string(x = col_name, fill = col_name)) +
geom_bar() +
xlab(col_name) +
ggtitle(paste("Distribution of", col_name)) +
theme_minimal()
print(plot)
})
Q1 <- quantile(data$age, 0.25)
Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
# Boxplots
boxplots <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(x)
})
print(boxplots)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
# Boxplots
boxplots <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(x)
})
print(boxplots)
pairs(data_clean[sapply(data_clean, is.numeric)])
cor_matrix <- cor(data_clean[sapply(data_clean, is.numeric)], use = "complete.obs")
print(cor_matrix)
ggplot(data_clean, aes(x = age, y = bmi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
categorical_columns <- c('age', 'sex', 'bmi')
data_clean[categorical_columns] <- lapply(data_clean[categorical_columns], factor)
str(data_clean)
factor_columns <- names(data_clean)[sapply(data_clean, is.factor)]
print(factor_columns)
if (length(factor_columns) == 0) {
cat("No factor columns available.\n")
} else {
sapply(factor_columns, function(col) print(table(data_clean[[col]])))
}
lapply(names(data_clean)[sapply(data_clean, is.factor)], function(col_name) {
plot <- ggplot(data_clean, aes_string(x = col_name, fill = col_name)) +
geom_bar() +
xlab(col_name) +
ggtitle(paste("Distribution of", col_name)) +
theme_minimal()
print(plot)
})
Q1 <- quantile(data$age, 0.25)
Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
library(dplyr)
library(ggplot2)
data <- read.csv("insurance.csv")
summary(data)
str(data)
sum(is.na(data))
data_clean <- na.omit(data)
data_filled <- data
data_filled$age <- ifelse(is.na(data_filled$age), mean(data_filled$age, na.rm = TRUE), data_filled$age)
sapply(data_clean, summary)
# Histograms
histograms <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(x)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
xlab(x)
})
print(histograms)
# Boxplots
boxplots <- lapply(names(data_clean)[sapply(data_clean, is.numeric)], function(x) {
ggplot(data_clean, aes_string(y = x)) +
geom_boxplot(fill = "gray", color = "black") +
ylab(x)
})
print(boxplots)
pairs(data_clean[sapply(data_clean, is.numeric)])
cor_matrix <- cor(data_clean[sapply(data_clean, is.numeric)], use = "complete.obs")
print(cor_matrix)
ggplot(data_clean, aes(x = age, y = bmi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data_clean, aes(x = age, y = sex, color = bmi)) +
geom_point() +
geom_smooth(method = lm)
categorical_columns <- c('age', 'sex', 'bmi')
data_clean[categorical_columns] <- lapply(data_clean[categorical_columns], factor)
str(data_clean)
factor_columns <- names(data_clean)[sapply(data_clean, is.factor)]
print(factor_columns)
if (length(factor_columns) == 0) {
cat("No factor columns available.\n")
} else {
sapply(factor_columns, function(col) print(table(data_clean[[col]])))
}
lapply(names(data_clean)[sapply(data_clean, is.factor)], function(col_name) {
plot <- ggplot(data_clean, aes_string(x = col_name, fill = col_name)) +
geom_bar() +
xlab(col_name) +
ggtitle(paste("Distribution of", col_name)) +
theme_minimal()
print(plot)
})
Q1 <- quantile(data$age, 0.25)
Q3 <- quantile(data$bmi, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(age < lower_bound | bmi > upper_bound)
print(outliers)
library(MASS)
cov_matrix <- cov(data[, c("age", "bmi")])
center <- colMeans(data[, c("age", "bmi")])
mahalanobis_distances <- mahalanobis(data[, c("age", "bmi")], center = center, cov = cov_matrix)
threshold <- qchisq(0.975, df = 2)
data$Outlier <- mahalanobis_distances > threshold
outliers <- data %>%
filter(Outlier == TRUE)
print(outliers)
